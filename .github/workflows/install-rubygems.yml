name: install-rubygems

on:
  pull_request:

  push:
    branches:
      - master

concurrency:
  group: ci-${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

permissions:  # added using https://github.com/step-security/secure-workflows
  contents: read

jobs:
  install_rubygems_ubuntu:
    name: Install Rubygems on Ubuntu (${{ matrix.ruby.name }}, ${{ matrix.openssl.name }})
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        ruby:
          - { name: "2.6", value: 2.6.10 }
          - { name: "2.7", value: 2.7.8 }
          - { name: "3.0", value: 3.0.6 }
          - { name: "3.1", value: 3.1.4 }
          - { name: "3.2", value: 3.2.2 }
          - { name: jruby-9.4, value: jruby-9.4.2.0 }
          - { name: truffleruby-22, value: truffleruby-22.3.0 }
        openssl:
          - { name: "openssl", value: true }
          - { name: "no-openssl", value: false }
    steps:
      - uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0
      - name: Setup ruby
        uses: ruby/setup-ruby@a05e47355e80e57b9a67566a813648fa67d92011 # v1.157.0
        with:
          ruby-version: ${{ matrix.ruby.value }}
          bundler: none
      - name: Check successful install without warnings
        run: |
          ruby -Ilib -S rake install 2> errors.txt || (cat errors.txt && exit 1)
          test ! -s errors.txt || (cat errors.txt && exit 1)
      - name: Check downgrading
        run: gem update --system 3.3.3
      - name: Check installing fileutils
        run: gem install fileutils
      - name: Check installing with upgraded fileutils
        run: |
          ruby -Ilib -S rake install 2> errors.txt || (cat errors.txt && exit 1)
          test ! -s errors.txt || (cat errors.txt && exit 1)
      - name: Run a local rubygems command
        run: gem list bundler
        env:
          RUBYOPT: -Itest/rubygems/fake_certlib
        if: matrix.openssl.value == false
      - name: Run a local rubygems command
        run: gem list bundler
        if: matrix.openssl.value == true
      - name: Run a remote rubygems command
        run: gem outdated
        if: matrix.openssl.value == true
      - name: Check commands in presence of a plugin that leaves unresolved dependencies print no warnings
        run: |
          gem install attempt:0.6.2 rspec:3.10.0 rspec:3.11.0
          mkdir -p tmp/plugin-home
          echo "require 'attempt'" > tmp/plugin-home/rubygems_plugin.rb
          RUBYOPT=-Itmp/plugin-home gem env version 2> errors.txt || (cat errors.txt && exit 1)
          test ! -s errors.txt || (cat errors.txt && exit 1)
          RUBYOPT=-Itmp/plugin-home gem install sys-admin:1.8.1 2> errors.txt || (cat errors.txt && exit 1)
          test ! -s errors.txt || (cat errors.txt && exit 1)
      - name: Run bundler installed as a default gem
        run: bundle --version
      - name: Check bundler man pages were installed and are properly picked up
        run: bundle install --help | grep -q BUNDLE-INSTALL
      - name: Check bundler fallback man pages are properly picked up
        run: sudo rm $(which man) && bundle install --help
      - name: Build bundler
        run: gem build bundler.gemspec
        working-directory: ./bundler
      - name: Install built bundler
        run: gem install bundler-*.gem --verbose --backtrace > output.txt
        working-directory: ./bundler
      - name: Check bundler install didn't hit the network
        run: if grep -q 'GET http' output.txt; then false; else true; fi
        working-directory: ./bundler
      - name: Check rails can be installed
        run: gem install rails --verbose --backtrace
    timeout-minutes: 10

  install_rubygems_windows:
    name: Install Rubygems on Windows (${{ matrix.ruby.name }})
    runs-on: windows-2022
    strategy:
      fail-fast: false
      matrix:
        ruby:
          - { name: "3.1", value: 3.1.4 } # Rails 7
          - { name: "3.2", value: 3.2.2 } # Rails 7
          - { name: jruby-9.4, value: jruby-9.4.2.0, rails-args: "--skip-webpack-install" } # Rails 6
    steps:
      - uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0
      - name: Setup ruby
        uses: ruby/setup-ruby@a05e47355e80e57b9a67566a813648fa67d92011 # v1.157.0
        with:
          ruby-version: ${{ matrix.ruby.value }}
          bundler: none
      - name: Setup java
        uses: actions/setup-java@0ab4596768b603586c0de567f2430c30f5b0d2b0 # v3.13.0
        with:
          distribution: temurin
          java-version: 19.0.2
        if: startsWith(matrix.ruby.name, 'jruby')
      - name: Install rubygems
        run: ruby setup.rb
        shell: bash
      - name: Check installation didn't modify any source controlled files
        run: git diff --exit-code
        shell: bash
      - name: Check we can install a Gemfile with git sources
        run: bundle init && bundle add fileutils --git https://github.com/ruby/fileutils
        shell: bash
      - name: Generate a Rails application
        run: gem install rails --version 7.0.8 && rails new foo ${{ matrix.ruby.rails-args }}
        shell: bash

    timeout-minutes: 20
